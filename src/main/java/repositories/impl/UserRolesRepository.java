package repositories.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import repositories.*;
import unitofwork.*;
import domain.*;

public class UserRolesRepository extends Repository<UserRoles>
implements IUserRolesRepository {
	
	protected PreparedStatement selectByRoleId;
	protected PreparedStatement selectByUserId;
	
	protected String selectByRoleIdSql=
			"SELECT * FROM "
			+ "t_sys_roles"
			+ " WHERE roleId=?";
	
	protected String selectByUserIdSql=
			"SELECT * FROM "
			+ "t_sys_roles"
			+ " WHERE userId=?";

	public UserRolesRepository(Connection connection,
			IEntityRetriever<UserRoles> retriever, IUnitOfWork uow) {
		super(connection, retriever, uow);
		
		try {
			selectByRoleId=connection.prepareStatement(selectByRoleIdSql);
			selectByUserId=connection.prepareStatement(selectByUserIdSql);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public List<UserRoles> withRoleId(int roleId) {

		List<UserRoles> result = new ArrayList<UserRoles>();
		
		try {
			selectByRoleId.setInt(1, roleId);
			ResultSet rs = selectByRoleId.executeQuery();
			while(rs.next())
			{
				result.add(retriever.build(rs));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return result;
	}

	@Override
	public List<UserRoles> withUserId(int userId) {

		List<UserRoles> result = new ArrayList<UserRoles>();
		
		try {
			selectByRoleId.setInt(1, userId);
			ResultSet rs = selectByRoleId.executeQuery();
			while(rs.next())
			{
				result.add(retriever.build(rs));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return result;
	}

	@Override
	protected void setUpUpdateQuery(UserRoles entity) throws SQLException {

		insert.setString(1, entity.getName());
		insert.setInt(2, entity.getUserId());
		insert.setInt(3, entity.getRoleId());
		insert.setInt(4, entity.getId());
		
	}

	@Override
	protected void setUpInsertQuery(UserRoles entity) throws SQLException {
		
		insert.setString(1, entity.getName());
		insert.setInt(2, entity.getUserId());
		insert.setInt(3, entity.getRoleId());
		
	}

	@Override
	protected String getCreateTable() {
		return 
				"CREATE TABLE IF NOT EXISTS t_sys_roles("
				+ "id int GENERATED BY DEFAULT AS IDENTITY(start with 1),"
				+ "name VARCHAR(20),"
				+ "userId bigint,"
				+ "roleId bigint"
				+ ")";
				
	}

	@Override
	protected String getTableName() {
		
		return "t_sys_roles";
	}

	@Override
	protected String getUpdateQuery() {

		return
				"UPDATE t_sys_roles SET (name,userId,roleId)=(?,?,?) WHERE id=?";
	}

	@Override
	protected String getInsertQuery() {

		return
				"INSERT INTO t_sys_roles(name,userId,roleId)"
				+ "VALUES(?,?,?)";
	}


}